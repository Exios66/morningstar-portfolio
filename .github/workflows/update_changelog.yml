name: Update Changelog

on:
  push:
    branches:
      - main

jobs:
  update_changelog:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches
        submodules: 'false'  # Explicitly ignore submodules

    - name: Debug repository state
      run: |
        echo "Current directory contents:"
        ls -la
        echo ".github directory contents:"
        ls -la .github
        echo "Git status:"
        git status
        echo "Git submodule status:"
        git submodule status
        echo "Git config:"
        git config --list

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'  # Use the latest stable version of Python 3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown python-frontmatter

    - name: List directory contents
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Root directory contents:"
        ls -la /

    - name: Debug Git permissions
      run: |
        git remote -v
        git status
        git config --list

    - name: Run changelog updater
      run: |
        if [ -f changelog_updater.py ]; then
          python changelog_updater.py
        elif [ -f scripts/changelog_updater.py ]; then
          python scripts/changelog_updater.py
        else
          echo "Error: changelog_updater.py not found in current directory or scripts/ directory"
          exit 1
          
    - name: Check for changes
      id: git-check
      run: |
        git diff --exit-code || echo "changed=true" >> $GITHUB_OUTPUT

    - name: Commit changes
      if: steps.git-check.outputs.changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add CHANGELOG.md
        git commit -m "Update CHANGELOG.md [skip ci]"

    - name: Push changes
      if: steps.git-check.outputs.changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

    - name: Create logs directory
      run: |
        mkdir -p logs
        echo "Workflow ran at $(date)" > logs/sample.log

    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: logs/
      if: always()  # This ensures logs are uploaded even if the job fails